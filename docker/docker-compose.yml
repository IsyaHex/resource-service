version: '3.7'

services:
  elasticsearch:
    image: elasticsearch:8.6.0
    container_name: elasticsearch
    env_file:
      - env/elastic.env
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    image: logstash:8.6.0
    container_name: logstash
    volumes:
      - type: bind
        source: ./logstash/config
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: C:/Users/Islomjon_Domlajonov/Desktop/msa-courses/resource-service/docker/logstash/log
        target: /logstash/logs/docker
    command: logstash -f pipeline/logstash.conf
    env_file:
      - env/logstash.env
    depends_on:
      - elasticsearch
    ports:
      - "9600:9600"

  kibana:
    image: kibana:8.6.0
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    env_file:
      - env/kibana.env
    depends_on:
      - elasticsearch

  zookeeper:
    image: elevy/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    env_file:
      - env/kafka.env
    depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper

  auth-server:
    build:
      dockerfile: AuthDockerFile
    image: auth-server.jar
    container_name: auth-server
    ports:
      - "1116:1116"

  service-configuration:
    build:
      dockerfile: ServiceConfigDockerFile
    image: service-configuration
    container_name: service-configuration
    ports:
      - "1414:1414"

  eureka-server:
    image: service-discovery.jar
    container_name: service_discovery
    build:
      context: .
      dockerfile: ServiceDiscoveryDockerFile
    ports:
      - "8761:8761"
    env_file:
      - env/service-discovery.env
    volumes:
      - C:/Users/Islomjon_Domlajonov/Desktop/msa-courses/resource-service/docker/logstash/log:/logs

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    build:
      dockerfile: GatewayDockerFile
    ports:
      - "1211:1211"
    depends_on:
      - eureka-server
      - resource-service
      - song-service
      - auth-server
    env_file:
      - env/api-gateway.env
    volumes:
      - C:/Users/Islomjon_Domlajonov/Desktop/msa-courses/resource-service/docker/logstash/log:/logs

  resource-processor:
    image: 'resource-processor.jar'
    restart: always
    container_name: 'resource-processor'
    build:
      context: .
      dockerfile: ProcessorDockerFile
    ports:
      - "1113:1113"
    depends_on:
      - song-service
      - resource-service
      - service-configuration
      - kafka
    env_file:
      - env/resource-processor.env
    volumes:
      - C:/Users/Islomjon_Domlajonov/Desktop/msa-courses/resource-service/docker/logstash/log:/logs

  msa_resources_db:
    image: 'postgres:14-alpine3.14'
    container_name: 'msa_resources_db'
    restart: always
    env_file:
      - env/resources-db.env

  resource-service:
    image: 'resource-service.jar'
    container_name: 'resource-service'
    build:
      context: .
      dockerfile: ResourceDockerFile
    ports:
      - "1111:1111"
    depends_on:
      - msa_resources_db
      - kafka
      - eureka-server
      - auth-server
    env_file:
      - env/resource-service.env
    volumes:
      - C:/Users/Islomjon_Domlajonov/Desktop/msa-courses/resource-service/docker/logstash/log:/logs

  song_service_db:
    image: 'postgres:14-alpine3.14'
    container_name: 'song_service_db'
    restart: always
    env_file:
      - env/song-db.env

  song-service:
    image: 'song-service.jar'
    container_name: 'song-service'
    build:
      context: .
      dockerfile: SongDockerFile
    ports:
      - "1112:1112"
    depends_on:
      - song_service_db
      - eureka-server
      - auth-server
    env_file:
      - env/song-service.env
    volumes:
      - C:/Users/Islomjon_Domlajonov/Desktop/msa-courses/resource-service/docker/logstash/log:/logs

  storage_service_db:
    image: 'postgres:14-alpine3.14'
    container_name: 'storage_service_db'
    restart: always
    env_file:
      - env/storage-db.env

  storage-service:
    image: 'storage-service.jar'
    container_name: 'storage-service'
    build:
      context: .
      dockerfile: StorageDockerFile
    ports:
      - "1115:1115"
    depends_on:
      - storage_service_db
      - eureka-server
      - auth-server
    env_file:
      - env/storage-service.env